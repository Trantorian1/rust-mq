# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 143cb6a9c009e9c14dd19a52002b35596328b8a1e40fa1ea832ddd64efea2640 # shrinks to (initial_state, transitions, seen_counter) = (Reference { backlog: [], read: ReferenceRegion { start: 0, size: 0 }, writ: ReferenceRegion { start: 0, size: 5 }, next: 0, count_sx: 1, count_rx: 1, cap: 5 }, [Send(0)], None)
cc 2ae309ae44965dd21e04620ccbaa627eda70f5efdf6f5071c3f410441626c1b9 # shrinks to (initial_state, transitions, seen_counter) = (Reference { last_read: [], last_writ: [], status: Ok(()), read: ReferenceRegion { start: 0, size: 0 }, writ: ReferenceRegion { start: 0, size: 32 }, next: 0, count_sx: 1, count_rx: 1, cap: 32 }, [Send(0)], None)
cc 5982b0f07ac8c2a1e65a06dca3a164f79b149dff590d985da1ab9d7d797810c0 # shrinks to (initial_state, transitions, seen_counter) = (Reference { last_read: [], last_writ: [], status: Ok(()), read: ReferenceRegion { start: 0, size: 0, _phantom: PhantomData<rust_mq::channel::proptesting::Read> }, writ: ReferenceRegion { start: 0, size: 64, _phantom: PhantomData<rust_mq::channel::proptesting::Write> }, next: 0, count_sx: 1, count_rx: 1, cap: 32, size: 64 }, [], None)
